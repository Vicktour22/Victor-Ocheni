{
 "cells": [
  {
   "cell_type": "code",
   "execution_count": 3,
   "id": "fd4ccb85-b4a6-49cc-897d-0f5730498440",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hello Victor, I am taking some Python classes?.\n",
      " Lowercase:victor\n",
      " Uppercase:VICTOR\n",
      " Titlecase:Victor\n",
      "Repeat 1: HelloVictor, I am taking some Python classes?HelloVictor, I am taking some Python classes?\n",
      "Repeat 2: Lowercase:victorLowercase:victor\n",
      "Repeat 3: Uppercase:VICTORUppercase:VICTOR\n",
      "Repeat 4: Titlecase:VictorTitlecase:Victor\n"
     ]
    }
   ],
   "source": [
    "# Storing name in a variable\n",
    "my_name= \"Victor\"\n",
    "print(f\"Hello {my_name}, I am taking some Python classes?.\")\n",
    "# Printing name in lowercase,uppercase, and titlecase\n",
    "print(f\" Lowercase:{my_name.lower()}\")\n",
    "print(f\" Uppercase:{my_name.upper()}\")\n",
    "print(f\" Titlecase:{my_name.title()}\")\n",
    "# Repeating sentences\n",
    "print(\"Repeat 1:\", f\"Hello{my_name}, I am taking some Python classes?\" *2)\n",
    "print(\"Repeat 2:\", f\"Lowercase:{my_name.lower()}\" * 2)\n",
    "print(\"Repeat 3:\", f\"Uppercase:{my_name.upper()}\" * 2)\n",
    "print(\"Repeat 4:\", f\"Titlecase:{my_name.title()}\" * 2)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 4,
   "id": "7ec0cce2-4657-4a62-9c7a-b1a59d71f480",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Winston Churchill once said, \"Success is not final,failure is not fatal: It is the courage to continue that counts.\"\n"
     ]
    }
   ],
   "source": [
    "# Storing famous person\n",
    "famous_person= \"Winston Churchill\"\n",
    "# Message with the quote\n",
    "quote=f'{famous_person} once said, \"Success is not final,failure is not fatal: It is the courage to continue that counts.\"'\n",
    "print(quote)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 6,
   "id": "3d9c0804-8d41-495c-b524-fbe35e1f57c1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      " Hello Uduak, Will you be available for Advanced Programming Class?\n",
      " Hello Kemi, Will you be available for Advanced Programming Class?\n",
      " Hello Abbas, Will you be available for Advanced Programming Class?\n",
      " Hello Sadiq, Will you be available for Advanced Programming Class?\n"
     ]
    }
   ],
   "source": [
    "#List of few of my classmate\n",
    "names= [\"Uduak\",\"Kemi\",\"Abbas\",\"Sadiq\"]\n",
    "# Printing each person's name\n",
    "for name in names:\n",
    "    print(f\" Hello {name}, Will you be available for Advanced Programming Class?\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 43,
   "id": "6cfbccd2-6997-43b9-a91b-07b7ec796cc6",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Hey Precious!, I hope this message finds you well. I wanted to personally invite you to my graduation ceremony. It's a significant milestone in my life, and I would be honored to have you there in the celebration. \n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Hey Caleb!, I hope this message finds you well. I wanted to personally invite you to my graduation ceremony. It's a significant milestone in my life, and I would be honored to have you there in the celebration. \n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Hey Gracewealth!, I hope this message finds you well. I wanted to personally invite you to my graduation ceremony. It's a significant milestone in my life, and I would be honored to have you there in the celebration. \n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Unfortunately,Caleb won't be able to make it to the graduation.\n",
      "Dear Precious,\n",
      "\n",
      "Due to unforeseen circumstances,we're reissuing the invitation to my graduation ceremony.\n",
      "\n",
      "Best regard,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Caleb,\n",
      "\n",
      "Due to unforeseen circumstances,we're reissuing the invitation to my graduation ceremony.\n",
      "\n",
      "Best regard,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Gracewealth,\n",
      "\n",
      "Due to unforeseen circumstances,we're reissuing the invitation to my graduation ceremony.\n",
      "\n",
      "Best regard,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Sandra has been invited to replace Caleb.\n"
     ]
    }
   ],
   "source": [
    "#List of people to invite to graduation\n",
    "invited_persons=[\"Precious\", \"Caleb\", \"Gracewealth\"]\n",
    "for person in invited_persons:\n",
    "    print(f\"Hey {person}!, I hope this message finds you well. I wanted to personally invite you to my graduation ceremony. It's a significant milestone in my life, and I would be honored to have you there in the celebration. \\n\\nBest regards,\\n[Victor Ocheni]\\n\")\n",
    "    \n",
    "#Guest who can't make it\n",
    "guest_that_cant_make_it = \"Caleb\"\n",
    "print(f\"Unfortunately,{guest_that_cant_make_it} won't be able to make it to the graduation.\")\n",
    "\n",
    "#second set of of invitation messages for each person still in the invited person\n",
    "for person in invited_persons:\n",
    "    print(f\"Dear {person},\\n\\nDue to unforeseen circumstances,we're reissuing the invitation to my graduation ceremony.\\n\\nBest regard,\\n[Victor Ocheni]\\n\")\n",
    "\n",
    "#Adding a new person to the list\n",
    "new_invitee= \"Sandra\"\n",
    "invited_persons[1]=new_invitee\n",
    "print(f\"{new_invitee} has been invited to replace {guest_that_cant_make_it}.\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 51,
   "id": "9fb7753c-a8fe-4522-82c7-81f2b5e14de7",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dear Precious,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Sandra,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Gracewealth,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel,\n",
      "\n",
      "Due to a fortunate turn of events,more space has become available at my graduation ceremony.\n",
      "\n",
      "Best regards,\n",
      "[Victor Ocheni]\n",
      "\n",
      "Exciting news! Additionl guests are now welcome at the graduation ceremony.\n"
     ]
    }
   ],
   "source": [
    "# Additional guests\n",
    "additional_guests= [\"Faithful\", \"Blessing\",\"Emmanuel\"]\n",
    "invited_persons.extend(additional_guests)\n",
    "\n",
    "#personalized invitations  for all guests\n",
    "for person in invited_persons:\n",
    "    print(f\"Dear {person},\\n\\nDue to a fortunate turn of events,more space has become available at my graduation ceremony.\\n\\nBest regards,\\n[Victor Ocheni]\\n\")\n",
    "\n",
    "#Notifying about the increased capacity\n",
    "print(\"Exciting news! Additionl guests are now welcome at the graduation ceremony.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 60,
   "id": "7e5da0f4-492d-41d2-8595-fd5eb18f0169",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Dear Mike, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Mike, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Mike, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Mike, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear NewGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear NewGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Precious, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Sandra, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Gracewealth, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear MiddleGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear MiddleGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear MiddleGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear MiddleGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Mary-ANN, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Mary-ANN, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear LastGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear LastGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear LastGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear LastGuest, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Magdalene, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Magdalene, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Faithful, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Blessing, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n",
      "Dear Emmanuel, \n",
      "\n",
      "Due to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\n",
      "\n",
      "Best regards, \n",
      "[Victor Ocheni]\n",
      "\n"
     ]
    }
   ],
   "source": [
    "additional_guest= [\"Faithful\",\"Blessing\",\"Emmanuel\"]\n",
    "invited_persons= [\"Mike\"]+ invited_persons\n",
    "\n",
    "#Adding a new guest to the beginning\n",
    "invited_persons.insert(len(invited_persons)//2, \"Mary-ANN\")\n",
    "\n",
    "#Adding a new guest to the middle\n",
    "invited_persons.append(\"Magdalene\")\n",
    "\n",
    "#Adding a new guest at the end\n",
    "invited_persons.extend(additional_guests)\n",
    "\n",
    "#Limiting the number of guests to two\n",
    "invited_person=invited_persons[:2]\n",
    "\n",
    "#Printing personalized invitations for the limited number of guests\n",
    "for person in invited_persons:\n",
    "    print(f\"Dear {person}, \\n\\nDue to unexpected organizational constraints, I can only accommodate two at my graduation ceremony.\\n\\nBest regards, \\n[Victor Ocheni]\\n\")\n",
    "\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 70,
   "id": "303d1f8d-1115-461a-908c-73978d993a55",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Sorted Guest List:\n",
      "Mike\n",
      "Mike\n"
     ]
    }
   ],
   "source": [
    "#Limiting the number of guests to two\n",
    "while len(invited_persons)>2:\n",
    "    removed_guest=invited_persons.pop()\n",
    "    print(f\"Dear {removed_guest}, \\n\\nI'm sincerly sorry, but dues to unexpected constraints, I won't be able to extend an invitation to you for my graduation ceremony.\\n\\nBest regards,\\n[Victor Ocheni]\\n\")\n",
    "\n",
    "#sorting the remaining guest list alphabetically\n",
    "invited_persons.sort()\n",
    "\n",
    "#printing the sorted guest list\n",
    "print(\"Sorted Guest List:\")\n",
    "for person in invited_persons:\n",
    "    print(person)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 72,
   "id": "81b4013c-d2ff-4eca-896d-60e2b79b8f14",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Reversed Guest List:\n",
      "Mike\n",
      "Mike\n"
     ]
    }
   ],
   "source": [
    "# Reversing the order of the guest list\n",
    "invited_persons.reverse()\n",
    "\n",
    "# Printing the reversed guest list\n",
    "print(\"Reversed Guest List:\")\n",
    "for person in invited_persons:\n",
    "    print(person)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 74,
   "id": "76f3e1f7-ec2b-425a-b584-7505969c73d2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Updated Guest List: []\n"
     ]
    }
   ],
   "source": [
    "# Removing the last two names from th guest list\n",
    "del invited_persons[-2:]\n",
    "\n",
    "# Printing the list to confirm it's empty\n",
    "print(\"Updated Guest List:\",invited_persons)\n"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 81,
   "id": "ecabe3f3-4a37-4bb1-801c-db55e1779c7f",
   "metadata": {},
   "outputs": [],
   "source": [
    "def make_album(Odumodublvck, Infinite_Reflections):\n",
    "    album_info= {'Odumodublvck': Odumodublvck,'Infinite_Reflections': Infinite_Reflections}\n",
    "    return album_info\n",
    "\n",
    "# Making three dictionaries representing different albums\n",
    "Celestial_Dreams = make_album('Luna_Sol','Celestial_Dreams')\n",
    "Whisper_in_the_wind = make_album('Ember_Rain','Whisper_in_the_wind') \n",
    "Nocturnal_Melodies = make_album('Midnight_Echoes','Nocturnal_Melodies')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "1d4d92b6-7d0c-489b-a997-3a47bd9ca460",
   "metadata": {},
   "outputs": [],
   "source": [
    "Artist Luna sol\n",
    "album celestial dreams\n",
    "\n",
    "Artist Ember Rain\n",
    "Album Whispers in the wind\n",
    "\n",
    "Artist Midnight Echoes\n",
    "Album Nocturnal Melodies"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 99,
   "id": "6de0a939-53a2-4640-8027-b94c8458f2f2",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Luna Sol Celestial Dreams\n",
      "Ember Rain Whisper in the wind\n",
      "Midnight Echoes Nocturnal Melodies\n"
     ]
    }
   ],
   "source": [
    "# printing each return value to show the stored album information\n",
    "print('Luna Sol','Celestial Dreams')\n",
    "print('Ember Rain','Whisper in the wind')\n",
    "print('Midnight Echoes','Nocturnal Melodies')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 101,
   "id": "fe5b1948-fbc5-46b6-a1a7-99602ef756b1",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Luna Sol Celestial Dreams\n",
      "Ember Rain Whisper in the wind\n",
      "Midnight Echoes Nocturnal Melodies\n"
     ]
    }
   ],
   "source": [
    "def make_album(Odumodublvck, Infinite_Reflections,track=None):\n",
    "    album_info= {'Odumodublvck': Odumodublvck,'Infinite_Reflections': Infinite_Reflections}\n",
    "    if tracks is not None:\n",
    "        album_info['tracks']= tracks\n",
    "    return album_info\n",
    "\n",
    "# printing each return value to show the stored album information\n",
    "print('Luna Sol','Celestial Dreams')\n",
    "print('Ember Rain','Whisper in the wind')\n",
    "print('Midnight Echoes','Nocturnal Melodies')"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 9,
   "id": "79639cbd-6ed2-440c-b37c-68f557b962ad",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (1957967447.py, line 9)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[9], line 9\u001b[1;36m\u001b[0m\n\u001b[1;33m    album=\u001b[0m\n\u001b[1;37m          ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "while True:\n",
    "    artist_input=input(\"Enter the artist's name (or 'quit' to exit): \")\n",
    "    if artist_input.lower() =='quit':\n",
    "       break \n",
    "    title_input= input(\"Enter the album title: \")\n",
    "    track_input=input(\"Enter the number of tracks (optional): \")\n",
    "    \n",
    "    if trackS_input.isdigit():\n",
    "            album=\n",
    "    \n",
    "    make_album(artist_input, title_input,int(tracks_input))\n",
    "        else:\n",
    "            album =\n",
    "    make_album(artist_input, title_input)\n",
    "\n",
    "    print(album)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 13,
   "id": "f80f6b42-ec9d-4ed1-96f3-ca856dc26e39",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "Elvis\n",
      "Sunday\n",
      "Tony\n"
     ]
    }
   ],
   "source": [
    "#List of magician's names\n",
    "magicians=[\"Elvis\",\"Sunday\",\"Tony\"]\n",
    "\n",
    "def show_magicians(magician_list):\n",
    "    for magician in magician_list:\n",
    "        print(magician)\n",
    "\n",
    "#Calling the function to show magicians\n",
    "show_magicians (magicians)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 17,
   "id": "e3445315-78f7-4ac1-b62f-2609597fbbc1",
   "metadata": {},
   "outputs": [
    {
     "ename": "SyntaxError",
     "evalue": "invalid syntax (2442277103.py, line 2)",
     "output_type": "error",
     "traceback": [
      "\u001b[1;36m  Cell \u001b[1;32mIn[17], line 2\u001b[1;36m\u001b[0m\n\u001b[1;33m    for i in\u001b[0m\n\u001b[1;37m            ^\u001b[0m\n\u001b[1;31mSyntaxError\u001b[0m\u001b[1;31m:\u001b[0m invalid syntax\n"
     ]
    }
   ],
   "source": [
    "def make_great(magician_list):\n",
    "    for i in\n",
    "range(len(magician_list)):\n",
    "        magician_list[i]=\"the Great\" +magician_list[i]\n",
    "\n",
    "#calling make_great() to modify the list\n",
    "make_great(magicians)\n",
    "\n",
    "#calling show_magicians() to see the modified list\n",
    "show_magicians(magicians)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": 27,
   "id": "658f2758-3f2f-4aee-9bb4-b97c05c05e97",
   "metadata": {},
   "outputs": [
    {
     "name": "stdout",
     "output_type": "stream",
     "text": [
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n",
      "[1, 8, 27, 64, 125, 216, 343, 512, 729, 1000]\n"
     ]
    }
   ],
   "source": [
    "# List to store the first 10 cubes \n",
    "cubes = [number **3 for number in range (1,11)]\n",
    "\n",
    "#printing the value of each cube using a for loop\n",
    "for cube in cubes:\n",
    "    print(cubes)"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a72b18f8-e8c3-428b-b856-bb3c84ead090",
   "metadata": {},
   "outputs": [],
   "source": [
    "while True:\n",
    "    age_input=input(\"Enter your age(or 'quit' to exit): \")\n",
    "    if age_input.lower() == 'quit':\n",
    "        break\n",
    "    try:\n",
    "        age=int(age_input)\n",
    "        if age< 3:\n",
    "            print(\"Your ticket is free.\")\n",
    "        elif 3 <= age <= 12:\n",
    "            print(\"Your ticket costs N5,000.\")\n",
    "        else:\n",
    "            print(\"Your ticket costs N10,000.\")\n",
    "    except ValueError:\n",
    "        print(\"Invalid input. Please enter a valid age or 'quit'.\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "e4882448-1bb4-40bf-a7dd-833f72708594",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using a conditional test in the while statement to stop the loop\n",
    "while True:\n",
    "    age_input=input(\"Enter your age(or 'quit' to exit): \")\n",
    "    if age_input.lower() == 'quit':\n",
    "        break\n",
    "    try:\n",
    "        age=int(age_input)\n",
    "        if age< 3:\n",
    "            print(\"Your ticket is free.\")\n",
    "        elif 3 <= age <= 12:\n",
    "            print(\"Your ticket costs N5,000.\")\n",
    "        else:\n",
    "            print(\"Your ticket costs N10,000.\")\n",
    "    except ValueError:\n",
    "        print(\"Invalid input. Please enter a valid age or 'quit'.\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "bed9a8dc-1b59-41bf-b409-cff7a2006046",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using an active variable to control how long the loop runs:\n",
    "active= True\n",
    "    age_input=input(\"Enter your age(or 'quit' to exit): \")\n",
    "    if age_input.lower() == 'quit':\n",
    "        active=False\n",
    "    else:\n",
    "        try:\n",
    "            age=int(age_input)\n",
    "            if age< 3:\n",
    "            print(\"Your ticket is free.\")\n",
    "            elif 3 <= age <= 12:\n",
    "                print(\"Your ticket costs N5,000.\")\n",
    "            else:\n",
    "                print(\"Your ticket costs N10,000.\")\n",
    "        except ValueError:\n",
    "        print(\"Invalid input. Please enter a valid age or 'quit'.\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "91f6824f-8acc-45df-b3de-af27c77aab9c",
   "metadata": {},
   "outputs": [],
   "source": [
    "# Using a break statement to exit the loop when the user enter a 'quit'value:\n",
    "while True:\n",
    "    age_input=input(\"Enter your age(or 'quit' to exit): \")\n",
    "    \n",
    "    if age_input.lower() == 'quit':\n",
    "        break\n",
    "    try:\n",
    "        age=int(age_input)\n",
    "        if age< 3:\n",
    "            print(\"Your ticket is free.\")\n",
    "        elif 3 <= age <= 12:\n",
    "            print(\"Your ticket costs N5,000.\")\n",
    "        else:\n",
    "            print(\"Your ticket costs N10,000.\")\n",
    "    except ValueError:\n",
    "        print(\"Invalid input. Please enter a valid age or 'quit'.\")\n",
    "        "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "7ebf6fb6-e1bc-4162-b6fe-268090abb44f",
   "metadata": {},
   "outputs": [],
   "source": [
    "alien_color='green'\n",
    "if alien_color=='green':\n",
    "    print(\"Congratulation! You just earned 5 points.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "c4ddd11d-f7c3-4b95-b8d1-a8311ae263b1",
   "metadata": {},
   "outputs": [],
   "source": [
    "#passing the if test\n",
    "alien_color='green'\n",
    "if alien_color=='green':\n",
    "    print(\"Congratulation! You just earned 5 points.\")\n",
    "\n",
    "#passing the if test (no output}:\n",
    "alien_color='red'\n",
    "if alien_color=='green':\n",
    "    print(\"Congratulation! You just earned 5 points.\")"
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "a047c426-870f-40f9-8987-2f37dc050938",
   "metadata": {},
   "outputs": [],
   "source": [
    "# if-else chain that checks the alien's color:\n",
    "alien_color='green'\n",
    "if alien_color=='green':\n",
    "    print(\"Congratulations! You just earned 5 points for shootinf the alien.\")\n",
    "    print(\"You shot down an alien,but it wasn't green.No points earned.\")\n",
    "    "
   ]
  },
  {
   "cell_type": "code",
   "execution_count": null,
   "id": "b358683f-7d78-45cd-a1d1-8d9f40577173",
   "metadata": {},
   "outputs": [],
   "source": []
  }
 ],
 "metadata": {
  "kernelspec": {
   "display_name": "Python 3 (ipykernel)",
   "language": "python",
   "name": "python3"
  },
  "language_info": {
   "codemirror_mode": {
    "name": "ipython",
    "version": 3
   },
   "file_extension": ".py",
   "mimetype": "text/x-python",
   "name": "python",
   "nbconvert_exporter": "python",
   "pygments_lexer": "ipython3",
   "version": "3.12.0"
  }
 },
 "nbformat": 4,
 "nbformat_minor": 5
}
